{
  "name": "babel-plugin-tester",
  "version": "0.0.0-semantically-released",
  "description": "Utilities for testing babel plugins",
  "keywords": [
    "babel",
    "plugin",
    "tester"
  ],
  "homepage": "https://github.com/babel-utils/babel-plugin-tester#readme",
  "bugs": {
    "url": "https://github.com/babel-utils/babel-plugin-tester/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/babel-utils/babel-plugin-tester"
  },
  "license": "MIT",
  "author": "Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)",
  "sideEffects": false,
  "type": "commonjs",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "default": "./dist/index.js"
    },
    "./pure": {
      "types": "./dist/plugin-tester.d.ts",
      "default": "./dist/plugin-tester.js"
    },
    "./package": "./package.json",
    "./package.json": "./package.json"
  },
  "typesVersions": {
    "*": {
      "pure": [
        "./dist/plugin-tester.d.ts"
      ],
      "*": [
        "./dist/index.d.ts"
      ]
    }
  },
  "files": [
    "/dist",
    "/LICENSE",
    "/package.json",
    "/README.md"
  ],
  "scripts": {
    "build": "npm run build:dist --",
    "build:changelog": "conventional-changelog --outfile CHANGELOG.md --config conventional.config.js --release-count 0 --skip-unstable && (if [ \"$CHANGELOG_SKIP_TITLE\" != 'true' ]; then { node -e 'console.log(require(\"./conventional.config.js\").changelogTitle)'; cat CHANGELOG.md; } > CHANGELOG.md.ignore && mv CHANGELOG.md.ignore CHANGELOG.md; fi) && remark -o --use reference-links --use gfm --use frontmatter CHANGELOG.md && prettier --write CHANGELOG.md",
    "build:dist": "NODE_ENV=production tsc --project tsconfig.types.json --incremental false && NODE_ENV=production-cjs babel src --extensions .ts --out-dir dist",
    "clean": "git ls-files --exclude-standard --ignored --others --directory | grep -vE '^((\\.(env|vscode|husky))|next-env\\.d\\.ts|node_modules)($|\\/)' | xargs -p rm -rf",
    "format": "sort-package-json && remark -o --use reference-links --use gfm --use frontmatter '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && prettier --write '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && if [ -z \"$ALLOW_DISABLED_LINKS\" ] && grep -qR --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; then echo '---\nWARNING: disabled links were found in the following files:'; grep -R --color=always --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; echo '(to ignore this error, run this command again with ALLOW_DISABLED_LINKS=1)'; exit 1; fi",
    "lint": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.lint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.lint.json src; Y=$?; remark --quiet --use gfm --use frontmatter --use lint-final-newline --use lint-no-auto-link-without-protocol --use lint-no-blockquote-without-marker --use lint-ordered-list-marker-style --use lint-hard-break-spaces --use lint-no-duplicate-definitions --use lint-no-heading-content-indent --use lint-no-inline-padding --use lint-no-undefined-references --use lint-no-unused-definitions --use validate-links --no-stdout '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}'; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "lint:all": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.eslint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.eslint.json .; Y=$?; remark --quiet --use gfm --use frontmatter --use lint-final-newline --use lint-no-auto-link-without-protocol --use lint-no-blockquote-without-marker --use lint-ordered-list-marker-style --use lint-hard-break-spaces --use lint-no-duplicate-definitions --use lint-no-heading-content-indent --use lint-no-inline-padding --use lint-no-undefined-references --use lint-no-unused-definitions --use validate-links --no-stdout '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}'; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "test": "npm run test:unit --",
    "test:all": "NODE_ENV=test jest --coverage",
    "test:unit": "NODE_ENV=test jest",
    "test:update": "npm test:all -- --updateSnapshot --coverage"
  },
  "dependencies": {
    "lodash.mergewith": "^4.6.2",
    "prettier": "^2.7.1",
    "strip-indent": "^3.0.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.19.3",
    "@babel/core": "^7.19.3",
    "@babel/eslint-parser": "^7.19.1",
    "@babel/helper-plugin-utils": "^7.19.0",
    "@babel/plugin-proposal-export-default-from": "^7.18.10",
    "@babel/plugin-syntax-jsx": "^7.18.6",
    "@babel/plugin-syntax-typescript": "^7.18.6",
    "@babel/preset-env": "^7.19.3",
    "@babel/preset-typescript": "^7.18.6",
    "@types/babel__helper-plugin-utils": "^7.10.0",
    "@types/jest": "^29.1.2",
    "@types/lodash.mergewith": "^4.6.7",
    "@types/node": "^18.8.3",
    "@typescript-eslint/eslint-plugin": "^5.39.0",
    "@typescript-eslint/parser": "^5.39.0",
    "@xunnamius/jest-types": "^1.1.3",
    "@xunnamius/types": "^1.3.0",
    "babel-jest": "^29.1.2",
    "babel-loader": "^8.2.5",
    "babel-plugin-explicit-exports-references": "^1.0.2",
    "debug": "^4.3.4",
    "eslint": "^8.24.0",
    "eslint-import-resolver-typescript": "^3.5.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^27.1.1",
    "jest": "^29.1.2",
    "jest-circus": "^29.1.2",
    "prettier": "^2.7.1",
    "remark-cli": "^11.0.0",
    "remark-frontmatter": "^4.0.1",
    "remark-gfm": "^3.0.1",
    "remark-lint-final-newline": "^2.1.1",
    "remark-lint-hard-break-spaces": "^3.1.1",
    "remark-lint-no-auto-link-without-protocol": "^3.1.1",
    "remark-lint-no-blockquote-without-marker": "^5.1.1",
    "remark-lint-no-duplicate-definitions": "^3.1.1",
    "remark-lint-no-heading-content-indent": "^4.1.1",
    "remark-lint-no-inline-padding": "^4.1.1",
    "remark-lint-no-undefined-references": "^4.2.0",
    "remark-lint-no-unused-definitions": "^3.1.1",
    "remark-lint-ordered-list-marker-style": "^3.1.1",
    "remark-reference-links": "^6.0.1",
    "remark-validate-links": "^12.1.0",
    "sort-package-json": "^2.0.0",
    "source-map-support": "^0.5.21",
    "toss-expression": "^0.1.1",
    "type-fest": "^3.0.0",
    "typescript": "^4.8.4"
  },
  "peerDependencies": {
    "@babel/core": ">=7.0.0-beta.41"
  },
  "engines": {
    "node": "^14.20.0 || ^16.16.0 || >=18.5.0"
  },
  "publishConfig": {
    "access": "public"
  }
}
