// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`assert throws if code is unchanged + snapshot enabled 1`] = `Code was unmodified but attempted to take a snapshot. If the code should not be modified, set \`snapshot: false\``;

exports[`assert throws if snapshot and output are both provided 1`] = `\`output\` cannot be provided with \`snapshot: true\``;

exports[`assert throws if there's no code 1`] = `A string or object with a \`code\` or \`fixture\` property must be provided`;

exports[`can fail tests in fixtures at an absolute path 1`] = `actual output does not match output.js`;

exports[`default will throw if output changes 1`] = `Expected output to not change, but it did`;

exports[`plugin is required 1`] = `plugin is a required parameter.`;

exports[`snapshot option can be derived from the root config 1`] = `\`output\` cannot be provided with \`snapshot: true\``;

exports[`takes a snapshot: 1. captains-log 1`] = `

var hi = "hey";

      ↓ ↓ ↓ ↓ ↓ ↓

var ih = "hey";

`;

exports[`tests cannot be both only-ed and skipped 1`] = `Cannot enable both skip and only on a test`;

exports[`throws an error if babelrc is true with no filename 1`] = `babelrc set to true, but no filename specified in babelOptions`;

exports[`throws error if fixture provided and code changes 1`] = `Expected output to not change, but it did`;

exports[`throws error when error expected but no error thrown 1`] = `Expected to throw error, but it did not.`;

exports[`throws error when function doesn't return true 1`] = `[BABEL] unknown: test message (While processing: "base$0")`;

exports[`throws if output is incorrect 1`] = `Output is incorrect.`;
